{"ast":null,"code":"var _jsxFileName = \"/Users/samuelsheldon/Documents/testCamera_PWA/my-app/src/QR.jsx\",\n    _s = $RefreshSig$();\n\nimport QRCode from 'qrcode';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst text = \"https://github.com/orgs/UKHomeOffice/repositories?language=&page=1&q=cop&sort=&type=all\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    text\n  } = _ref;\n  const [src, setSrc] = useState(' ');\n  useEffect(() => {\n    QRCode.toDataURL(text).then(data => {\n      setSrc(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"edNWoiVaHArlYaVZ3cB0hYJpUzY=\");\n\n_c = App;\nexport default Qr;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/samuelsheldon/Documents/testCamera_PWA/my-app/src/QR.jsx"],"names":["QRCode","useEffect","useState","text","App","src","setSrc","toDataURL","then","data","Qr"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAmC,OAAnC;;AACA,MAAMC,IAAI,GAAG,yFAAb;;AACA,MAAMC,GAAG,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAED,IAAAA;AAAF,GAAa;AACxB,QAAM,CAACE,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAE,GAAF,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,MAAM,CAACO,SAAP,CAAiBJ,IAAjB,EAAuBK,IAAvB,CAA6BC,IAAD,IAAU;AACpCH,MAAAA,MAAM,CAACG,IAAD,CAAN;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,sBAAO;AAAA,2BACL;AAAK,MAAA,GAAG,EAAEJ;AAAV;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAXD;;GAAMD,G;;KAAAA,G;AAcN,eAAeM,EAAf","sourcesContent":["import QRCode from 'qrcode';\nimport { useEffect, useState} from 'react';\nconst text = \"https://github.com/orgs/UKHomeOffice/repositories?language=&page=1&q=cop&sort=&type=all\"\nconst App = ({ text }) => {\n  const [src, setSrc] = useState( ' ');\n\n  useEffect(() => {\n    QRCode.toDataURL(text).then((data) => {\n      setSrc(data);\n    });\n  }, [])\n  return <div>\n    <img src={src} />\n    </div>;\n};\n\n\nexport default Qr;"]},"metadata":{},"sourceType":"module"}