{"ast":null,"code":"var _jsxFileName = \"/Users/samuelsheldon/Documents/testCamera_PWA/my-app/src/nfc.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction nfc() {\n  const scan = async () => {\n    if (\"NDEFReader\" in window) {\n      try {\n        const ndef = new window.NDEFReader();\n        await ndef.scan();\n        console.log(\"Scan started successfully.\");\n\n        ndef.onreading = () => {\n          console.log(\"Cannot read data from the NFC tag. Try another one?\");\n        };\n\n        ndef.onreading = event => {\n          console.log(\"NDEF message read.\");\n          onReading(event);\n        };\n      } catch (error) {\n        console.log(`Error! Scan failed to start: ${error}`);\n      }\n    }\n  };\n\n  const onReading = _ref => {\n    let {\n      message,\n      serialNumber\n    } = _ref;\n    console.log(serialNumber);\n\n    for (const record of message.records) {\n      switch (record.recordType) {\n        case \"text\":\n          const textDecoder = new TextDecoder(record.encoding);\n          console.log(\"Message\", textDecoder.decode(record.data));\n          break;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: scan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\nexport default nfc;","map":{"version":3,"sources":["/Users/samuelsheldon/Documents/testCamera_PWA/my-app/src/nfc.js"],"names":["React","nfc","scan","window","ndef","NDEFReader","console","log","onreading","event","onReading","error","message","serialNumber","record","records","recordType","textDecoder","TextDecoder","encoding","decode","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AACX,QAAMC,IAAI,GAAG,YAAY;AACrB,QAAI,gBAAgBC,MAApB,EAA4B;AACxB,UAAI;AACA,cAAMC,IAAI,GAAG,IAAID,MAAM,CAACE,UAAX,EAAb;AACA,cAAMD,IAAI,CAACF,IAAL,EAAN;AAEAI,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AACAH,QAAAA,IAAI,CAACI,SAAL,GAAiB,MAAM;AACnBF,UAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACH,SAFD;;AAGAH,QAAAA,IAAI,CAACI,SAAL,GAAkBC,KAAD,IAAW;AACxBH,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAG,UAAAA,SAAS,CAACD,KAAD,CAAT;AACH,SAHD;AAIH,OAZD,CAYE,OAAOE,KAAP,EAAc;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BI,KAAM,EAAlD;AACH;AACJ;AACJ,GAlBD;;AAoBA,QAAMD,SAAS,GAAG,QAA6B;AAAA,QAA5B;AAACE,MAAAA,OAAD;AAAUC,MAAAA;AAAV,KAA4B;AAC3CP,IAAAA,OAAO,CAACC,GAAR,CAAYM,YAAZ;;AACA,SAAI,MAAMC,MAAV,IAAoBF,OAAO,CAACG,OAA5B,EAAqC;AACjC,cAAQD,MAAM,CAACE,UAAf;AACI,aAAK,MAAL;AACI,gBAAMC,WAAW,GAAG,IAAIC,WAAJ,CAAgBJ,MAAM,CAACK,QAAvB,CAApB;AACAb,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBU,WAAW,CAACG,MAAZ,CAAmBN,MAAM,CAACO,IAA1B,CAAvB;AACJ;AAJJ;AAMH;AACJ,GAVD;;AAYA,sBAEI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAEnB;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQH;;AAED,eAAeD,GAAf","sourcesContent":["import React from 'react';\n\nfunction nfc() {\n    const scan = async () => {\n        if (\"NDEFReader\" in window) {\n            try {\n                const ndef = new window.NDEFReader();\n                await ndef.scan();\n\n                console.log(\"Scan started successfully.\");\n                ndef.onreading = () => {\n                    console.log(\"Cannot read data from the NFC tag. Try another one?\");\n                };\n                ndef.onreading = (event) => {\n                    console.log(\"NDEF message read.\");\n                    onReading(event);\n                };\n            } catch (error) {\n                console.log(`Error! Scan failed to start: ${error}`);\n            }\n        }\n    };\n\n    const onReading = ({message, serialNumber}) => {\n        console.log(serialNumber);\n        for(const record of message.records) {\n            switch (record.recordType) {\n                case \"text\":\n                    const textDecoder = new TextDecoder(record.encoding);\n                    console.log(\"Message\", textDecoder.decode(record.data));\n                break;\n            }\n        }\n    };\n\n    return(\n\n        <div>\n            <button onClick={scan}/>\n        </div>\n    );\n\n\n}\n\nexport default nfc;"]},"metadata":{},"sourceType":"module"}